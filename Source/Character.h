#pragma once
#include<DirectXMath.h>

//キャラクター
class Character {
public:
	Character() {}
	virtual ~Character() {}

	//位置取得
	const DirectX::XMFLOAT3& GetPosition() const { return position; }

	//位置設定
	void SetPosition(const DirectX::XMFLOAT3& position) { this->position = position; }


	//回転取得
	const DirectX::XMFLOAT3& GetAngle()const { return angle; }

	//回転設定
	void SetAngle(const DirectX::XMFLOAT3& angle) { this->angle = angle; }

	//スケール取得
	const DirectX::XMFLOAT3& GetScale() const { return scale; }

	//スケール取得
	void SetScale(const DirectX::XMFLOAT3& scale) { this->scale = scale; }

//行列更新処理
	void UpdateTransform();

	// 地面に接地しているか
	bool IsGround() const { return isGround; }

	

	//半径取得
	float GetRadius() const { return radius; }

	//垂直移動更新処理
	void Character::UpdateVerticalMove(float elapsedTime);

	// 水平移動更新処理
	void UpdateHorizontalMove(float elapsedTime);

	//高さ取得
	float GrtHeigth()const { return height; }

protected :

	//移動処理
	void Move(float elapsedTime, float vx, float vz, float speed);

	//旋回処理
	void Turn(float elapsedTime, float vx, float vz, float speed);


protected:

	// 着地した時に呼ばれる
	virtual void OnLanding() {}



protected:
	DirectX::XMFLOAT3 position = { 0,0,0 };
	DirectX::XMFLOAT3 angle = { 0,0,0 };
	DirectX::XMFLOAT3 scale = { 1,1,1 };
	DirectX::XMFLOAT4X4 transform = {
	1,0,0,0,
	0,1,0,0,
	0,0,1,0,
	0,0,0,1 };
	bool				isGround = false;
	DirectX::XMFLOAT3	velocity = { 0, 0, 0 };
	float height = 2.0f;
	float radius = 0.5f;
	float stepOffset = 1.0f;
};
